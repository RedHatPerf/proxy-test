name: mersenne
hosts:
{% for agent in groups['driver-agent'] %}
  {{ hostvars[agent]['ansible_fqdn'] }}: {{ hostvars[agent]['ansible_fqdn'] }}:12345
{% endfor %}
simulation:
  threads: 16
  http:
{% for proxy in groups['proxy'] %}
  - baseUrl: http://{{ hostvars[proxy]['ansible_' + proxy_iface]['ipv4']['address'] }}:{{ hostvars[proxy]['proxy_port'] }}
    sharedConnections: {{ (test_shared_connections / (groups['proxy'] | length)) | int | default(100, true) }}
{% endfor %}
  phases:
  - warmup:
      rampPerSec:
        initialUsersPerSec: 1
<<<<<<< HEAD
        targetUsersPerSec: {{ test_users_per_sec }}
        duration: 20
        maxDuration: 21
        maxUnfinishedSessions: {{ test_users_per_sec }}
=======
        targetUsersPerSec: 10000
        duration: 20
        maxDuration: 21
        maxUnfinishedSessions: 10000
>>>>>>> 2159806... Lab settings
        scenario: &scenario
          orderedSequences:
          - test:
            - randomItem:
                var: url
                list:
{% for proxy in groups['proxy'] %}
                - http://{{ hostvars[proxy]['ansible_' + proxy_iface]['ipv4']['address'] }}:{{ hostvars[proxy]['proxy_port'] }}
{% endfor %}
            - randomInt:
                min: 200
                max: 300
                var: p
            - httpRequest:
                baseUrl:
                  var: url
                GET:
                  pattern: /mersenneprime?p=${p}
                handler:
                  statusValidator:
                    range:
                      min: 200
                      max: 299
            - awaitAllResponses
  - iterations:
<<<<<<< HEAD
      constantPerSec:
        startAfter: warmup
        usersPerSec:
          base:      {{ test_users_per_sec }}
          increment: {{ test_inc_users_per_sec }}
        maxIterations: 30
        duration: 20
        # We need to set maxDuration, otherwise the scheduled request would prolong the phase
        maxDuration: 21
        maxUnfinishedSessions: {{ test_users_per_sec }}
        scenario: *scenario
=======
     constantPerSec:
       startAfter: warmup
       usersPerSec:
         base:      10000
         increment: 2000
       maxIterations: 30
       duration: 20
       # We need to set maxDuration, otherwise the scheduled request would prolong the phase
       maxDuration: 21
       maxUnfinishedSessions: 10000
       scenario: *scenario
>>>>>>> 2159806... Lab settings
